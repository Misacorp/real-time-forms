{
  "info": {
    "title": "Real Time Forms",
    "version": "0.0.04"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "jwt": []
    }
  ],
  "swagger": "2.0",
  "paths": {
    "/api/response": {
      "post": {
        "summary": "Creates new responses",
        "description": "Creates new responses from an array of response objects. Responses with no **content** are accepted but ignored. Responses with a nonexistant **question_id** are ignored.",
        "tags": [
          "Response"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "question_id"
                ],
                "properties": {
                  "question_id": {
                    "type": "integer"
                  },
                  "content": {
                    "type": "string"
                  }
                }
              },
              "example": [
                {
                  "question_id": "3",
                  "content": "My family has seven dogs and a giraffe."
                },
                {
                  "question_id": "7",
                  "content": "Mexican noodles. They totally exist."
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Every response that corresponded to an existing question was recorded. Responses to nonexistant questions are ignored."
          },
          "400": {
            "description": "Bad request. Question id or content parameters missing."
          }
        }
      }
    },
    "/api/question": {
      "get": {
        "summary": "Gets all created questions",
        "description": "Returns the **id** and **content** of every available question in array format.",
        "tags": [
          "Question"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "content": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "content": "What is the spiciest dish you have eaten?"
                },
                {
                  "id": 2,
                  "content": "How many yellow books have you read?"
                }
              ]
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new question",
        "description": "Creates a new question, returning the newly created question **id**.",
        "tags": [
          "Question"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "content"
              ],
              "properties": {
                "content": {
                  "type": "string"
                }
              },
              "example": {
                "content": "What is the spiciest dish you have eaten?"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource created and available through location header URI.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 2
              }
            }
          },
          "400": {
            "description": "Bad request. Content parameter missing or empty."
          },
          "404": {
            "description": "Couldn't create question for current user. User not found."
          }
        }
      }
    },
    "/api/question/{question_id}": {
      "get": {
        "summary": "Get a specific question",
        "description": "Returns the **id** and **content** of the specified question.",
        "tags": [
          "Question"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the question to get."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "content": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": 1,
                "content": "What is the spiciest dish you have eaten?"
              }
            }
          },
          "403": {
            "description": "No Authorization header was provided, or header was invalid."
          },
          "404": {
            "description": "Not found. No question found with specified **id**."
          }
        }
      }
    },
    "/api/question/{question_id}/response": {
      "get": {
        "summary": "Get all unique responses to a specific question",
        "description": "Returns every unique response corresponding to **question_id**.",
        "parameters": [
          {
            "in": "path",
            "name": "question_id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric question ID for which to get responses."
          }
        ],
        "tags": [
          "Response",
          "Question"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "question": {
                  "type": "object",
                  "properties": {
                    "id": "integer",
                    "content": "string"
                  }
                },
                "unique_responses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": "string",
                      "count": "integer"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "question": {
                  "id": 4,
                  "content": "What is the spiciest dish you have eaten?"
                },
                "unique_responses": [
                  {
                    "content": "Mexican noodles. They totally exist.",
                    "count": 5
                  },
                  {
                    "content": "Fireman's Breathmints.",
                    "count": 2
                  },
                  {
                    "content": "Chinese fajitas. They're a thing.",
                    "count": 1
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request. Authorization header missing or invalid."
          },
          "404": {
            "description": "No question found with specified id and provided authorization."
          }
        }
      }
    }
  },
  "definitions": {},
  "responses": {},
  "parameters": {},
  "tags": []
}
